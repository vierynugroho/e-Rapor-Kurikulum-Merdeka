// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  TEACHER
  ADMIN
}

enum UserPosition {
  TEACHER
  HEADMASTER
  COMMITTEE
}

enum DevelopmentLevel {
  BB // Belum Berkembang
  MB // Mulai Berkembang
  BSH // Berkembang Sesuai Harapan
  BSB // Berkembang Sangat Baik
}

enum Religion {
  ISLAM
  KRISTEN
  KATOLIK
  KONGHUCU
  BUDDHA
  HINDU
}

enum Semester {
  GANJIL
  GENAP
}

enum ClassCategory {
  A
  B
}

enum Gender {
  LAKI_LAKI
  PEREMPUAN
}

enum AssessmentAspects {
  NILAI_AGAMA_DAN_BUDI_PEKERTI
  JATI_DIRI
  DASAR_LITERASI_MATEMATIKA_SAINS_TEKNOLOGI_REKAYASA_DAN_SENI
}

model Teacher {
  id              Int    @id @default(autoincrement())
  fullname        String
  email           String @unique
  identity_number String @unique
  password        String
  classID         Int?   @map("class_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  role        UserRole
  position    UserPosition
  Class       Class?                @relation(fields: [classID], references: [id])
  Score       Student_Score[]
  Development Student_Development[]
  Reflection  Reflection[]
  Attendance  Attendance[]

  @@index([classID], name: "idx_teacher_classId")
  @@map("teachers")
}

model Class {
  id       Int           @id @default(autoincrement())
  name     String        @unique
  category ClassCategory

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Student    Student[]
  Teacher    Teacher[]
  Reflection Reflection[]
  Attendance Attendance[]

  @@index([name], name: "idx_class_name")
  @@index([category], name: "idx_class_category")
  @@map("class")
}

model Period {
  id       Int      @id @default(autoincrement())
  semester Semester
  year     String   @default("2025")
  isActive Boolean  @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Score               Student_Score[]
  Student_Development Student_Development[]
  Reflection          Reflection[]
  Attendance          Attendance[]
  Indicator           Indicator[]
  Theme               Theme[]
  Student             Student[]

  @@index([isActive], name: "idx_period_isActive")
  @@index([semester, year], name: "idx_period_semester_year")
  @@map("periods")
}

model Theme {
  id       Int    @id @default(autoincrement())
  title    String
  periodId Int?

  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("update_at")
  Period    Period?     @relation(fields: [periodId], references: [id])
  Indicator Indicator[]

  @@index([title], name: "idx_theme_title")
  @@map("themes")
}

model Indicator {
  id             Int               @id @default(autoincrement())
  title          String
  description    String
  assesment_type AssessmentAspects
  themeId        Int
  periodId       Int?
  classCategory  ClassCategory

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Theme  Theme           @relation(fields: [themeId], references: [id])
  Period Period?         @relation(fields: [periodId], references: [id])
  Score  Student_Score[]

  @@index([themeId], name: "idx_indicator_themeId")
  @@index([assesment_type], name: "idx_indicator_assessmentType")
  @@index([classCategory], name: "idx_indicator_classCategory")
  @@map("indicators")
}

model Student {
  id             Int      @id @default(autoincrement())
  fullname       String
  gender         Gender
  religion       Religion
  parentName     String?  @map("parent_name")
  birthPlace     String   @map("birth_place")
  birthDate      DateTime @map("birth_date")
  classID        Int?     @map("class_id")
  address        String?
  currentPeriod  Int?
  classAndPeriod Json?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Period      Period?               @relation(fields: [currentPeriod], references: [id])
  Class       Class?                @relation(fields: [classID], references: [id])
  Score       Student_Score[]
  Development Student_Development[]
  Reflection  Reflection[]
  Attendance  Attendance[]

  @@index([fullname], name: "idx_student_fullname")
  @@index([classID], name: "idx_student_classId")
  @@index([gender], name: "idx_student_gender")
  @@index([religion], name: "idx_student_religion")
  @@map("students")
}

model Student_Score {
  id          Int              @id @default(autoincrement())
  studentId   Int
  periodId    Int?
  teacherId   Int?
  indicatorId Int?
  description String?
  value       DevelopmentLevel

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Student   Student    @relation(fields: [studentId], references: [id])
  Period    Period?    @relation(fields: [periodId], references: [id])
  Indicator Indicator? @relation(fields: [indicatorId], references: [id])
  Teacher   Teacher?   @relation(fields: [teacherId], references: [id])

  @@unique([studentId, teacherId, periodId, indicatorId])
  @@index([studentId], name: "idx_studentId")
  @@index([indicatorId], name: "idx_indicatorId")
  @@index([periodId], name: "idx_periodId")
  @@index([teacherId], name: "idx_score_teacherId")
  @@index([value], name: "idx_score_value")
  @@index([studentId, indicatorId, periodId], name: "idx_composite")
  @@map("student_scores")
}

model Reflection {
  id          Int     @id @default(autoincrement())
  studentId   Int
  periodId    Int?
  teacherId   Int?
  classId     Int?
  description String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Student Student  @relation(fields: [studentId], references: [id])
  Period  Period?  @relation(fields: [periodId], references: [id])
  Teacher Teacher? @relation(fields: [teacherId], references: [id])
  Class   Class?   @relation(fields: [classId], references: [id])

  @@unique([studentId, teacherId, periodId, classId])
  @@index([studentId], name: "idx_reflection_studentId")
  @@index([periodId], name: "idx_reflection_periodId")
  @@index([teacherId], name: "idx_reflection_teacherId")
  @@index([classId], name: "idx_reflection_classId")
  @@index([studentId, periodId], name: "idx_reflection_composite")
  @@map("reflections")
}

model Attendance {
  id        Int  @id @default(autoincrement())
  studentId Int
  periodId  Int?
  teacherId Int?
  classId   Int?
  sick      Int?
  permit    Int?
  absent    Int?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  Student Student  @relation(fields: [studentId], references: [id])
  Period  Period?  @relation(fields: [periodId], references: [id])
  Teacher Teacher? @relation(fields: [teacherId], references: [id])
  Class   Class?   @relation(fields: [classId], references: [id])

  @@unique([studentId, teacherId, periodId, classId])
  @@index([studentId], name: "idx_attendance_studentId")
  @@index([periodId], name: "idx_attendance_periodId")
  @@index([teacherId], name: "idx_attendance_teacherId")
  @@index([classId], name: "idx_attendance_classId")
  @@index([studentId, periodId], name: "idx_attendance_composite")
  @@map("attendances")
}

model Student_Development {
  id         Int      @id @default(autoincrement())
  height     Float?
  weight     Float?
  notes      String?
  studentId  Int
  teacherId  Int
  periodId   Int
  recordDate DateTime @default(now()) @map("record_date")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Teacher Teacher @relation(fields: [teacherId], references: [id])
  Student Student @relation(fields: [studentId], references: [id])
  Period  Period  @relation(fields: [periodId], references: [id])

  @@index([studentId], name: "idx_development_studentId")
  @@index([teacherId], name: "idx_development_teacherId")
  @@index([periodId], name: "idx_development_periodId")
  @@index([recordDate], name: "idx_development_recordDate")
  @@index([studentId, periodId], name: "idx_development_student_period")
  @@map("student_developments")
}
